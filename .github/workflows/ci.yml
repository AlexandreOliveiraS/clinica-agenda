name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend:
    name: Backend (Maven + JDK 21)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: clinica
          POSTGRES_USER: clinica
          POSTGRES_PASSWORD: clinica
        ports:
          - 5432:5432
        # healthcheck — só inicia os testes quando o banco estiver pronto
        options: >-
          --health-cmd="pg_isready -U clinica"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # Se você adicionou o Maven Wrapper ao backend (recomendado)
      - name: Make mvnw executable (Linux)
        run: chmod +x mvnw || true

      - name: Maven test (backend)
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/clinica
          SPRING_DATASOURCE_USERNAME: clinica
          SPRING_DATASOURCE_PASSWORD: clinica
        run: |
          ./mvnw -B -ntp -U test

      # Se preferir empacotar depois de testar:
      # - name: Maven package
      #   run: ./mvnw -B -ntp -U -DskipTests package

  frontend:
    name: Frontend (Node + Vite)
    runs-on: ubuntu-latest
    needs: backend

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      # Se quiser rodar testes do front (Vitest), adicione o script "test" e descomente:
      # - name: Frontend tests
      #   run: npm test -- --run
